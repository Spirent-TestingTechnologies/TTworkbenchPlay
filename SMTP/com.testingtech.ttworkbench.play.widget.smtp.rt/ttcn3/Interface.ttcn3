/*
 * ----------------------------------------------------------------------------
 *  (C) Copyright Testing Technologies, 2012-2013.  All Rights Reserved.
 *
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 *
 *  Contributors:
 *     Testing Technologies - initial API and implementation
 *
 *  All copies of this program, whether in whole or in part, and whether
 *  modified or not, must display this and all other embedded copyright
 *  and ownership notices in full.
 *
 *  See the file COPYRIGHT for details of redistribution and use.
 *
 *  You should have received a copy of the COPYRIGHT file along with
 *  this file; if not, write to the Testing Technologies,
 *  Michaelkirchstr. 17/18, 10179 Berlin, Germany.
 *
 *  TESTING TECHNOLOGIES DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
 *  SOFTWARE. IN NO EVENT SHALL TESTING TECHNOLOGIES BE LIABLE FOR ANY
 *  SPECIAL, DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 *  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 *  AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 *  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
 *  THIS SOFTWARE.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 *  EITHER EXPRESSED OR IMPLIED, INCLUDING ANY KIND OF IMPLIED OR
 *  EXPRESSED WARRANTY OF NON-INFRINGEMENT OR THE IMPLIED WARRANTIES
 *  OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.
 * -----------------------------------------------------------------------------
 */
module Interface {
    import from Parameters all;
    import from SMTPFunctions all;
    
    type component SMTPComponentType extends SMTPFunctions.SMTPComponentType {}
        
    type port SMTP message {
        // commands (GUI -> TE)
        in Connect, Disconnect, Login, Logout, SendMessage, SendMessageWithCustomHeaders;
        // events (TE -> GUI)
        out Status;
    }
    
    type record Connect {
        charstring server,
        integer portNumber
    }
    
    type record Disconnect {}

    type record Login {
        charstring method,
        charstring username,
        charstring password
    }

    type record Logout {}

    type record SendMessage {
        charstring senderId,
        record of charstring recipientIds,
        record of charstring recipientCCIds,
        record of charstring recipientBCCIds,
        charstring subject,
        charstring messageBody
    }
    
    type record HeaderField {
        charstring fieldName,
        charstring fieldValue
    }

    type record SendMessageWithCustomHeaders {
        record of HeaderField customHeaderFields,
        charstring senderId,
        record of charstring recipientIds,
        record of charstring recipientCCIds,
        record of charstring recipientBCCIds,
        charstring subject,
        charstring messageBody
    }
    
    type record Status {
        integer statusCode,
        charstring statusMessage,
        boolean connected,
        boolean loggedIn
    }
}